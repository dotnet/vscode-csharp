{
  "command.csharp.attachToProcess": ".NET 5+ 또는 .NET Core 프로세스에 연결",
  "command.csharp.downloadDebugger": ".NET Core 디버거 다운로드",
  "command.csharp.listProcess": "연결 프로세스 나열",
  "command.csharp.listRemoteDockerProcess": "Docker 연결에 프로세스 나열",
  "command.csharp.listRemoteProcess": "첨부할 원격 연결의 프로세스 나열",
  "command.csharp.reportIssue": "문제 신고",
  "command.csharp.showDecompilationTerms": "디컴파일러 계약 표시",
  "command.dotnet.generateAssets.currentProject": "빌드 및 디버그에 대한 자산 생성",
  "command.dotnet.openSolution": "솔루션 열기",
  "command.dotnet.restartServer": "언어 서버 다시 시작",
  "command.dotnet.restore.all": "모든 프로젝트 복원",
  "command.dotnet.restore.project": "프로젝트 복원",
  "command.dotnet.test.debugTestsInContext": "컨텍스트에서 테스트 디버그",
  "command.dotnet.test.runTestsInContext": "컨텍스트에서 테스트 실행",
  "command.extension.showRazorCSharpWindow": "Razor CSharp 표시",
  "command.extension.showRazorHtmlWindow": "Razor Html 표시",
  "command.o.fixAll.document": "문서 내에서 발생하는 모든 코드 문제 해결",
  "command.o.fixAll.project": "프로젝트 내에서 발생하는 모든 코드 문제 해결",
  "command.o.fixAll.solution": "솔루션 내에서 발생하는 모든 코드 문제 해결",
  "command.o.pickProjectAndStart": "프로젝트 선택",
  "command.o.reanalyze.allProjects": "모든 프로젝트 분석",
  "command.o.reanalyze.currentProject": "현재 프로젝트 분석",
  "command.o.restart": "OmniSharp 다시 시작",
  "command.razor.reportIssue": "Razor 문제 보고",
  "configuration.csharp.inlayHints.enableInlayHintsForImplicitObjectCreation": "암시적 개체 만들기에 대한 힌트 표시",
  "configuration.csharp.inlayHints.enableInlayHintsForImplicitVariableTypes": "유추된 형식의 변수에 대한 힌트 표시",
  "configuration.csharp.inlayHints.enableInlayHintsForIndexerParameters": "인덱서에 대한 힌트 표시",
  "configuration.csharp.inlayHints.enableInlayHintsForLambdaParameterTypes": "람다 매개 변수 형식에 대한 힌트 표시",
  "configuration.csharp.inlayHints.enableInlayHintsForTypes": "인라인 유형 힌트 표시",
  "configuration.dotnet.autoInsert.enableAutoInsert": "문서 주석 자동 삽입을 사용하도록 설정합니다.",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope": "다음에 대한 백그라운드 코드 분석 실행: (이전의 `omnisharp.enableRoslynAnalyzers`)",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.fullSolution": "전체 솔루션",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.none": "없음",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.openFiles": "열린 문서",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope": "다음에 대한 컴파일러 오류 및 경고 표시:",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.fullSolution": "전체 솔루션",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.none": "없음",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.openFiles": "열린 문서",
  "configuration.dotnet.codeLens.enableReferencesCodeLens": "참조 CodeLens를 표시해야 하는지 여부를 지정합니다(이전 `csharp.referencesCodeLens.enabled`).",
  "configuration.dotnet.codeLens.enableTestsCodeLens": "실행 및 디버그 테스트 CodeLens를 표시해야 하는지 여부를 지정합니다(이전 `csharp.testsCodeLens.enabled`).",
  "configuration.dotnet.completion.provideRegexCompletions": "완성 목록에 정규식을 표시합니다.",
  "configuration.dotnet.completion.showCompletionItemsFromUnimportedNamespaces": "완성 목록에 가져오지 않은 유형과 가져오지 않은 확장 메서드를 표시하기 위한 지원을 활성화합니다. 커밋되면 적절한 using 지시문이 현재 파일의 맨 위에 추가됩니다(이전 `omnisharp.enableImportCompletion`).",
  "configuration.dotnet.completion.showNameCompletionSuggestions": "최근에 선택한 멤버에 대해 자동 개체 이름 완성을 수행합니다.",
  "configuration.dotnet.completion.triggerCompletionInArgumentLists": "인수 목록에 자동으로 완성 목록 표시",
  "configuration.dotnet.defaultSolution.description": "작업 영역에서 열릴 기본 솔루션의 경로, 건너뛰려면 '비활성화'로 설정하세요(이전 `omnisharp.defaultLaunchSolution`).",
  "configuration.dotnet.enableXamlTools": "C# 개발자 키트를 사용할 때 XAML 도구 사용",
  "configuration.dotnet.formatting.organizeImportsOnFormat": "문서 서식을 지정하는 동안 'using' 지시문을 그룹화하고 정렬할지 여부를 지정합니다. (Previously `omnisharp.organizeImportsOnFormat`)",
  "configuration.dotnet.highlighting.highlightRelatedJsonComponents": "커서 아래에서 관련 JSON 구성 요소를 강조 표시합니다.",
  "configuration.dotnet.highlighting.highlightRelatedRegexComponents": "커서 아래의 관련 정규식 구성 요소를 강조 표시합니다.",
  "configuration.dotnet.inlayHints.enableInlayHintsForLiteralParameters": "리터럴에 대한 힌트 표시",
  "configuration.dotnet.inlayHints.enableInlayHintsForObjectCreationParameters": "'new' 식에 대한 힌트 표시",
  "configuration.dotnet.inlayHints.enableInlayHintsForOtherParameters": "다른 모든 항목에 대한 힌트 표시",
  "configuration.dotnet.inlayHints.enableInlayHintsForParameters": "인라인 매개 변수 이름 힌트 표시",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix": "매개 변수 이름이 접미사만 다른 경우 힌트 표시 안 함",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName": "인수가 매개 변수 이름과 일치하는 경우 힌트 표시 안 함",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent": "매개 변수 이름이 메서드의 의도와 일치하는 경우 힌트 표시 안 함",
  "configuration.dotnet.navigation.navigateToDecompiledSources": "디컴파일된 원본 탐색을 사용하도록 설정합니다.",
  "configuration.dotnet.navigation.navigateToSourceLinkAndEmbeddedSources": "소스 링크 및 포함된 원본에 대한 탐색을 사용하도록 설정합니다.",
  "configuration.dotnet.preferCSharpExtension": "프로젝트가 C# 확장으로만 로드되도록 합니다.  C# 개발 키트에서 지원되지 않는 레거시 프로젝트 형식을 사용할 때 유용할 수 있습니다(창 다시 로드 필요).",
  "configuration.dotnet.projects.binaryLogPath": "로드 오류를 진단하는 데 도움이 되도록 프로젝트를 로드할 때 MSBuild 이진 로그가 기록되는 경로를 설정합니다.",
  "configuration.dotnet.projects.enableAutomaticRestore": "확장에서 자산이 누락된 것을 감지하는 경우 자동 NuGet 복원을 사용하도록 설정합니다.",
  "configuration.dotnet.quickInfo.showRemarksInQuickInfo": "기호를 표시할 때 설명 정보를 표시합니다.",
  "configuration.dotnet.server.componentPaths": "언어 서버의 기본 제공 구성 요소에 대한 폴더 경로를 재정의할 수 있습니다(예: 로컬로 빌드된 구성 요소를 사용하도록 확장 디렉터리의 .roslynDevKit 경로 재정의).",
  "configuration.dotnet.server.componentPaths.roslynDevKit": "언어 서버의 .roslynDevKit 구성 요소에 대한 폴더 경로를 재정의합니다.",
  "configuration.dotnet.server.componentPaths.xamlTools": "언어 서버의 .xamlTools 구성 요소에 대한 폴더 경로를 재정의합니다.",
  "configuration.dotnet.server.crashDumpPath": "언어 서버가 충돌하는 경우 크래시 덤프가 기록되는 폴더 경로를 설정합니다.  사용자가 쓸 수 있어야 합니다.",
  "configuration.dotnet.server.extensionPaths": "언어 서버 --extension 인수 경로에 대한 재정의",
  "configuration.dotnet.server.path": "서버(LSP 또는 O#) 실행 파일의 절대 경로를 지정합니다. 비어 있으면 C# 확장에 고정된 버전이 사용됩니다(이전 `omnisharp.path`).",
  "configuration.dotnet.server.startTimeout": "클라이언트가 언어 서버를 시작하고 연결하기 위한 시간 제한(밀리초)을 지정합니다.",
  "configuration.dotnet.server.suppressLspErrorToasts": "서버에서 복구 가능한 오류가 발생하는 경우 오류 알림이 표시되지 않도록 합니다.",
  "configuration.dotnet.server.suppressMiscellaneousFilesToasts": "활성 문서가 열려 있는 작업 영역 밖에 있는 경우 경고 알림이 표시되지 않도록 합니다.",
  "configuration.dotnet.server.useServerGC": ".NET 서버 가비지 수집을 사용하도록 언어 서버를 구성합니다.  서버 가비지 수집은 일반적으로 메모리 사용량이 많을수록 성능이 향상됩니다.",
  "configuration.dotnet.server.waitForDebugger": "디버거 연결을 허용하기 위해 서버를 시작할 때 --debug 플래그를 전달합니다(이전 `omnisharp.waitForDebugger`).",
  "configuration.dotnet.symbolSearch.searchReferenceAssemblies": "참조 어셈블리에서 기호를 검색합니다. 가져오기 추가와 같은 기호 검색이 필요한 기능에 영향을 줍니다.",
  "configuration.dotnet.typeMembers.memberInsertionLocation": "인터페이스 또는 추상 클래스를 구현할 때 속성, 이벤트 및 메서드의 삽입 위치입니다.",
  "configuration.dotnet.typeMembers.memberInsertionLocation.atTheEnd": "끝에 배치합니다.",
  "configuration.dotnet.typeMembers.memberInsertionLocation.withOtherMembersOfTheSameKind": "동일한 종류의 다른 멤버와 함께 배치합니다.",
  "configuration.dotnet.typeMembers.propertyGenerationBehavior": "인터페이스 또는 추상 클래스를 구현할 때 속성의 생성 동작입니다.",
  "configuration.dotnet.typeMembers.propertyGenerationBehavior.preferAutoProperties": "자동 속성을 선호합니다.",
  "configuration.dotnet.typeMembers.propertyGenerationBehavior.preferThrowingProperties": "throw 속성을 선호합니다.",
  "configuration.dotnet.unitTestDebuggingOptions": "단위 테스트 디버깅을 시작할 때 디버거와 함께 사용하는 옵션입니다(이전 `csharp.unitTestDebuggingOptions`).",
  "configuration.dotnet.unitTests.runSettingsPath": "단위 테스트를 실행할 때 사용해야 하는 .runsettings 파일의 경로입니다. (이전의 `omnisharp.testRunSettings`)",
  "configuration.omnisharp.autoStart": "OmniSharp 서버를 자동으로 시작할지 여부를 지정합니다. false이면 'OmniSharp 다시 시작' 명령으로 OmniSharp를 시작할 수 있습니다.",
  "configuration.omnisharp.csharp.format.enable": "기본 C# 포맷터를 사용하거나 사용하지 않도록 설정합니다(다시 시작 필요).",
  "configuration.omnisharp.csharp.maxProjectFileCountForDiagnosticAnalysis": "전체 작업 영역에 대해 진단이 보고되는 최대 파일 수를 지정합니다. 이 제한을 초과하면 현재 열려 있는 파일에 대해서만 진단이 표시됩니다. 제한을 아예 사용하지 않으려면 0 이하의 값을 지정하세요.",
  "configuration.omnisharp.csharp.referencesCodeLens.filteredSymbols": "CodeLens를 사용하지 않도록 설정해야 하는 사용자 지정 기호 이름의 배열입니다.",
  "configuration.omnisharp.csharp.semanticHighlighting.enabled": "C# 파일에 대한 의미 체계 강조 표시를 사용하거나 사용하지 않도록 설정합니다(Razor 파일은 현재 지원되지 않음). 기본값은 false입니다. 변경 내용을 적용하려면 열려 있는 파일을 닫으세요.",
  "configuration.omnisharp.csharp.showOmnisharpLogOnError": "OmniSharp에서 오류를 보고하면 출력 창에 OmniSharp 로그를 표시합니다.",
  "configuration.omnisharp.csharp.suppressBuildAssetsNotification": "애플리케이션을 빌드하거나 디버그하려면 누락된 자산을 추가하라는 알림 창을 표시하지 않습니다.",
  "configuration.omnisharp.csharp.suppressDotnetInstallWarning": ".NET Core SDK가 경로에 없다는 경고를 표시하지 않습니다.",
  "configuration.omnisharp.csharp.suppressDotnetRestoreNotification": "종속성을 확인할 수 없는 경우 'dotnet restore'를 수행하라는 알림 창을 표시하지 않습니다.",
  "configuration.omnisharp.csharp.suppressHiddenDiagnostics": "'숨겨진' 진단(예: '불필요한 using 지시문')이 편집기 또는 문제 창에 표시되지 않도록 합니다.",
  "configuration.omnisharp.csharp.suppressProjectJsonWarning": "project.json이 더 이상 .NET Core 애플리케이션에 지원되는 프로젝트 형식이 아니라는 경고를 표시하지 않습니다.",
  "configuration.omnisharp.disableMSBuildDiagnosticWarning": "OmniSharp에서 프로젝트를 로드하는 동안 경고 또는 오류가 발생한 경우 알림을 표시할지 여부를 지정합니다. 이러한 경고/오류는 항상 OmniSharp 로그에 내보내집니다.",
  "configuration.omnisharp.dotNetCliPaths": "사용자 코드를 실행하는 데 사용할 .NET CLI의 로컬 다운로드 경로입니다.",
  "configuration.omnisharp.dotnet.server.useOmnisharp": "활성화된 경우 언어 기능에 Omnisharp 서버를 사용하도록 전환합니다(다시 시작 필요). 이 옵션은 C# 개발 키트가 설치된 경우 적용되지 않습니다.",
  "configuration.omnisharp.dotnetPath": "기본 시스템 디렉터리 대신 사용할 dotnet 설치 디렉터리의 경로를 지정합니다. 이는 OmniSharp 서버 자체를 호스트하는 데 사용할 dotnet 설치에만 영향을 줍니다. 예: \"/home/username/mycustomdotnetdirectory\".",
  "configuration.omnisharp.enableAsyncCompletion": "(실험적) 완성 편집을 비동기적으로 확인할 수 있도록 합니다. 이렇게 하면 완성 항목을 삽입한 후 약간의 지연이 발생하지만 완성 목록, 특히 재정의 및 부분 메서드 완성 목록을 표시하는 시간이 단축될 수 있습니다. 이 기능을 사용하는 경우 대부분의 완성 항목은 눈에 띄는 영향을 받지 않지만 삽입이 완료되기 전, 재정의 또는 부분 메서드 완성을 삽입한 직후에 입력하면 예기치 않은 결과가 발생할 수 있습니다.",
  "configuration.omnisharp.enableDecompilationSupport": "메타데이터를 보는 대신 외부 참조를 디컴파일할 수 있도록 합니다.",
  "configuration.omnisharp.enableEditorConfigSupport": ".editorconfig에서 코드 스타일, 명명 규칙 및 분석기 설정을 읽을 수 있도록 합니다.",
  "configuration.omnisharp.enableLspDriver": "실험적 언어 프로토콜 기반 엔진을 사용할 수 있도록 합니다(바인딩을 올바르게 설정하려면 다시 로드해야 함).",
  "configuration.omnisharp.enableMsBuildLoadProjectsOnDemand": "true인 경우 MSBuild 프로젝트 시스템은 편집기에서 열린 파일에 대한 프로젝트만 로드합니다. 이 설정은 대규모 C# 코드베이스에 유용하며 편집 중인 코드와 관련된 프로젝트에 대해서만 코드 탐색 기능을 빠르게 초기화할 수 있습니다. 이 설정을 사용하면 OmniSharp에서 더 적은 수의 프로젝트를 로드할 수 있으므로 불완전한 기호 참조 목록이 표시될 수 있습니다.",
  "configuration.omnisharp.loggingLevel": "OmniSharp 서버의 로깅 출력 수준을 지정합니다.",
  "configuration.omnisharp.maxFindSymbolsItems": "'작업 영역의 기호로 이동' 작업이 표시할 수 있는 최대 항목 수입니다. 제한은 여기에 양수가 지정된 경우에만 적용됩니다.",
  "configuration.omnisharp.maxProjectResults": "'프로젝트 선택' 드롭다운에 표시할 최대 프로젝트 수입니다(최대 250개).",
  "configuration.omnisharp.minFindSymbolsFilterLength": "'작업 영역의 기호로 이동' 작업이 결과를 표시하기 전에 입력해야 하는 최소 문자 수입니다.",
  "configuration.omnisharp.monoPath": "\"useModernNet\"이 false로 설정된 경우 기본 시스템 위치 대신 사용할 Mono 설치 경로를 지정합니다. 예: \"/Library/Frameworks/Mono.framework/Versions/Current\"",
  "configuration.omnisharp.projectFilesExcludePattern": "모든 프로젝트 파일을 찾기 위해 OmniSharp에서 사용하는 제외 패턴입니다.",
  "configuration.omnisharp.projectLoadTimeout": "Visual Studio Code가 OmniSharp 서버가 시작될 때까지 기다리는 시간입니다. 시간은 초 단위로 표시됩니다.",
  "configuration.omnisharp.razor.completion.commitElementsWithSpace": "태그 도우미 및 구성 요소를 공백으로 커밋할지 여부를 지정합니다.",
  "configuration.omnisharp.razor.devmode": "확장이 로컬 Razor.VSCode 개발이 가능한 모드에서 실행되도록 강제합니다.",
  "configuration.omnisharp.razor.format.codeBlockBraceOnNextLine": "@code 또는 @functions 지시문 뒤의 여는 중괄호를 다음 줄에 강제로 배치합니다.",
  "configuration.omnisharp.razor.format.enable": "기본 Razor 포맷터를 사용하거나 사용하지 않도록 설정합니다.",
  "configuration.omnisharp.razor.plugin.path": "Razor 플러그 인 dll의 경로를 재정의합니다.",
  "configuration.omnisharp.sdkIncludePrereleases": "프로젝트 로드에 사용할 버전을 결정할 때 .NET SDK의 미리 보기 버전을 포함할지 여부를 지정합니다. \"useModernNet\"이 true로 설정된 경우 적용됩니다.",
  "configuration.omnisharp.sdkPath": "설치된 최상위 버전 대신 프로젝트 로드에 사용할 .NET SDK 설치 경로를 지정합니다. \"useModernNet\"이 true로 설정된 경우 적용됩니다. 예: /home/username/dotnet/sdks/6.0.300.",
  "configuration.omnisharp.sdkVersion": "설치된 최상위 버전 대신 프로젝트 로드에 사용할 .NET SDK 버전을 지정합니다. \"useModernNet\"이 true로 설정된 경우 적용됩니다. 예: 6.0.300.",
  "configuration.omnisharp.useEditorFormattingSettings": "OmniSharp에서 C# 코드 서식 지정(탭 사용, 들여쓰기 크기)에 VS Code 편집기 설정을 사용해야 하는지 여부를 지정합니다.",
  "configuration.omnisharp.useModernNet.description": ".NET 6에 OmniSharp 빌드를 사용합니다. 이 버전은 Unity를 포함하여 SDK 스타일이 아닌 .NET Framework 프로젝트를 지원하지 _않습니다_. SDK 스타일 Framework, .NET Core, .NET 5 이상 프로젝트에서는 성능이 크게 향상됩니다.",
  "configuration.omnisharp.useModernNet.title": "OmniSharp의 .NET 6 빌드 사용",
  "configuration.razor.languageServer.debug": "언어 서버를 시작할 때 디버그 연결을 기다릴지 여부를 지정합니다.",
  "configuration.razor.languageServer.directory": "Razor 언어 서버 디렉터리의 경로를 재정의합니다.",
  "configuration.razor.languageServer.forceRuntimeCodeGeneration": "(실험적) Razor 파일에 대해 결합된 디자인 타임/런타임 코드 생성 사용",
  "configuration.razor.languageServer.suppressLspErrorToasts": "서버에서 복구 가능한 오류가 발생하는 경우 오류 알림이 표시되지 않도록 합니다.",
  "configuration.razor.languageServer.useNewFormattingEngine": "새 Razor 서식 엔진을 사용합니다.",
  "configuration.razor.server.trace": "Razor 서버에 사용할 로깅 수준을 지정합니다.",
  "debuggers.coreclr.configurationSnippets.description.attach": "실행 중인 프로세스에 .NET 디버거(coreclr)를 연결합니다. 이 작업은 'Attach to a .NET 5+ or .NET Core process' 명령을 사용하여 수행할 수도 있습니다.",
  "debuggers.coreclr.configurationSnippets.description.blazor-hosted": "이 코드 조각은 Blazor WebAssembly 디버거(blazorwasm) 아래에서 새 프로세스를 시작하는 데 사용되며, 실행 파일의 경로를 지정합니다. 대부분의 경우 \".NET: Launch C# project\" 코드 조각이 더 나은 선택이지만, 이 코드 조각을 사용하면 모든 시작 옵션을 완전히 제어할 수 있습니다. 이 코드 조각은 파일을 처리할 백 엔드 ASP.NET Core 앱이 있는 프로젝트인 호스트된 Blazor 프로젝트용입니다.",
  "debuggers.coreclr.configurationSnippets.description.blazor-standalone": "이 코드 조각은 Blazor WebAssembly 디버거(blazorwasm) 아래에서 새 프로세스를 시작하는 데 사용됩니다. 대부분의 경우 \".NET: Launch C# project\" 코드 조각이 더 나은 선택이지만, 이 코드 조각을 사용하면 모든 시작 옵션을 완전히 제어할 수 있습니다. 이 코드 조각은 파일을 처리할 백 엔드 ASP.NET Core 앱이 없는 프로젝트인 독립 실행형 Blazor 프로젝트용입니다.",
  "debuggers.coreclr.configurationSnippets.description.console-local": "이 코드 조각은 .NET 디버거(coreclr) 아래에서 새 프로세스를 시작하는 데 사용되며, 시작할 실행 파일의 경로를 지정합니다. 대부분의 경우 \".NET: Launch C# project\" 코드 조각을 선택하는 것이 좋습니다. 이 코드 조각은 프로젝트가 이 VS Code 인스턴스 외부에서 작성되었거나 특정 버전의 'dotnet.exe'/'dotnet'과 같은 사용자 지정 실행 파일에서 .NET Code를 호스팅하려는 경우 또는 .NET Code가 네이티브 응용 프로그램에서 호스팅되는 경우에 유용합니다. 이 코드 조각은 콘솔 응용 프로그램용입니다.",
  "debuggers.coreclr.configurationSnippets.description.remote": "이 코드 조각에서는 VS Code 원격을 사용하지 **않고** .NET Code를 원격 디버그하는 방법을 보여 줍니다. 프로젝트를 로컬에서 구축하고 다른 컴퓨터에서 실행하려는 경우에 사용해야 합니다.",
  "debuggers.coreclr.configurationSnippets.description.web-local": "이 코드 조각은 .NET 디버거(coreclr) 아래에서 새 프로세스를 시작하는 데 사용되며, 시작할 실행 파일의 경로를 지정합니다. 대부분의 경우 \".NET: Launch C# project\" 코드 조각을 선택하는 것이 좋습니다. 이 코드 조각은 프로젝트가 이 VS Code 인스턴스 외부에서 작성되었거나 특정 버전의 'dotnet.exe'/'dotnet'과 같은 사용자 지정 실행 파일에서 .NET Code를 호스팅하려는 경우 또는 .NET Code가 네이티브 응용 프로그램에서 호스팅되는 경우에 유용합니다. 이 코드 조각은 웹(ASP.NET Core) 응용 프로그램용입니다.",
  "debuggers.coreclr.configurationSnippets.label.attach-local": ".NET: .NET 프로세스에 연결",
  "debuggers.coreclr.configurationSnippets.label.attach-remote": ".NET: 원격 디버깅 - .NET 프로세스에 연결",
  "debuggers.coreclr.configurationSnippets.label.blazor-hosted": ".NET: 웹 어셈블리 - 호스트된 Blazor 프로젝트 시작",
  "debuggers.coreclr.configurationSnippets.label.blazor-standalone": ".NET: 웹 어셈블리 - 독립 실행형 Blazor 프로젝트 시작",
  "debuggers.coreclr.configurationSnippets.label.console-local": ".NET: 실행 파일 시작(콘솔)",
  "debuggers.coreclr.configurationSnippets.label.console-remote": ".NET: 원격 디버깅 - 실행 파일 시작(콘솔)",
  "debuggers.coreclr.configurationSnippets.label.web-local": ".NET: 실행 파일 시작(웹)",
  "debuggers.dotnet.configurationSnippets.description": "이 코드 조각은 VS Code가 C# 프로젝트를 디버깅하도록 구성합니다. 디버그 옵션(예: 실행 파일에 대한 인수)은 '<project-directory>/Properties/launchSettings.json' 파일을 통해 구성할 수 있습니다.",
  "debuggers.dotnet.configurationSnippets.label": ".NET: C# 프로젝트 시작",
  "debuggers.dotnet.launch.launchConfigurationId.description": "사용할 시작 구성 ID입니다. 빈 문자열은 현재 활성 구성을 사용합니다.",
  "debuggers.dotnet.launch.projectPath.description": ".csproj 파일의 경로입니다.",
  "generateOptionsSchema.args.0.description": "프로그램에 전달된 명령줄 인수입니다.",
  "generateOptionsSchema.args.1.description": "프로그램에 전달된 명령줄 인수의 문자열화된 버전입니다.",
  "generateOptionsSchema.checkForDevCert.description": "Windows 또는 macOS에서 웹 프로젝트를 시작하고 이것이 활성화된 경우 디버거는 https 엔드포인트에서 실행되는 웹 서버를 개발하는 데 사용되는 자체 서명된 HTTPS 인증서가 컴퓨터에 있는지 확인합니다. 지정되지 않은 경우 `serverReadyAction`이 설정되면 기본값은 true입니다. 이 옵션은 Linux, VS Code 원격 및 VS Code 웹 UI 시나리오에서는 아무 작업도 수행하지 않습니다. HTTPS 인증서를 찾을 수 없거나 신뢰할 수 없는 경우 사용자에게 이를 설치/신뢰하라는 메시지가 표시됩니다.",
  "generateOptionsSchema.console.externalTerminal.enumDescription": "대상 프로세스는 자체 외부 터미널 내에서 실행됩니다. 이 모드를 사용하는 경우 Visual Studio Code와 외부 터미널 창 간에 포커스를 전환해야 합니다.",
  "generateOptionsSchema.console.integratedTerminal.enumDescription": "대상 프로세스는 VS Code의 통합 터미널 내에서 실행됩니다.",
  "generateOptionsSchema.console.internalConsole.enumDescription": "대상 프로세스의 콘솔 입력(stdin) 및 출력(stdout/stderr)은 VS Code 디버그 콘솔 통해 라우팅됩니다.",
  "generateOptionsSchema.console.markdownDescription": "대상 프로그램을 시작해야 하는 콘솔을 나타냅니다. 자세한 내용은 https://aka.ms/VSCode-CS-LaunchJson-Console을 참조하세요.",
  "generateOptionsSchema.console.settingsDescription": "**참고:** _이 옵션은 'dotnet' 디버그 구성 유형_을 사용하여 시작된 콘솔 프로젝트에만 사용됩니다.\r\n\r\n대상 프로그램을 시작해야 하는 콘솔을 나타냅니다. 자세한 내용은 https://aka.ms/VSCode-CS-LaunchJson-Console을 참조하세요.",
  "generateOptionsSchema.cwd.description": "디버깅 중인 프로그램의 작업 디렉터리 경로입니다. 기본값은 현재 작업 영역입니다.",
  "generateOptionsSchema.debugServer.description": "디버그 확장 배포 전용입니다. 포트가 지정된 경우 VS Code에서는 서버 모드로 실행하는 디버그 어댑터에 연결을 시도합니다.",
  "generateOptionsSchema.enableStepFiltering.markdownDescription": "속성 및 연산자 건너뛰기를 활성화하는 플래그입니다. 이 옵션의 기본값은 `true`입니다.",
  "generateOptionsSchema.env.description": "프로그램에 전달된 환경 변수입니다.",
  "generateOptionsSchema.envFile.markdownDescription": "파일에 의해 프로그램에 전달되는 환경 변수입니다(예: `${workspaceFolder}/.env`).",
  "generateOptionsSchema.expressionEvaluationOptions.allowFastEvaluate.description": "true(기본 상태)인 경우 디버거는 간단한 속성 및 메서드 실행을 시뮬레이션하여 더 빠른 평가를 시도합니다.",
  "generateOptionsSchema.expressionEvaluationOptions.allowImplicitFuncEval.description": "true(기본 상태)이면 디버거가 속성 'get' 메서드 및 기타 암시적 함수 호출을 자동으로 호출합니다.",
  "generateOptionsSchema.expressionEvaluationOptions.allowToString.markdownDescription": "true(기본 상태)이면 디버거가 자동으로 'ToString'을 호출하여 개체의 서식을 지정합니다. 'allowImplicitFuncEval'이 'false'인 경우에는 이 옵션이 적용되지 않습니다.",
  "generateOptionsSchema.expressionEvaluationOptions.description": "데이터 팁, 디버그 뷰의 '조사식' 및 '변수' 섹션 또는 디버그 콘솔 디버거가 식을 평가하는 방법을 제어하는 옵션입니다.",
  "generateOptionsSchema.expressionEvaluationOptions.showRawValues.description": "true이면 디버거는 변수 창에 개체의 원시 구조를 표시합니다.",
  "generateOptionsSchema.externalConsole.markdownDescription": "`externalConsole` 속성은 더 이상 사용되지 않습니다. 대신 `console`을 사용하세요. 이 옵션의 기본값은 `false`입니다.",
  "generateOptionsSchema.justMyCode.markdownDescription": "활성화된 경우(기본값) 디버거는 사용자 코드(\"내 코드\")만 표시하고 단계적으로 들어가며 시스템 코드 및 최적화되었거나 디버깅 기호가 없는 기타 코드는 무시합니다. [정보 더 보기](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)",
  "generateOptionsSchema.launchBrowser.args.description": "브라우저를 여는 명령에 전달할 인수입니다. 플랫폼별 요소(`osx`, `linux` 또는 `windows`)가 `args`에 대한 값을 지정하지 않는 경우에만 사용됩니다. ${auto-detect-url}을(를) 사용하여 서버가 수신하는 주소를 자동으로 사용하세요.",
  "generateOptionsSchema.launchBrowser.description": "시작의 일부로 웹 브라우저를 시작하는 옵션을 설명합니다.",
  "generateOptionsSchema.launchBrowser.enabled.description": "웹 브라우저 실행이 활성화되었는지 여부입니다. 이 옵션의 기본값은 `true`입니다.",
  "generateOptionsSchema.launchBrowser.linux.args.description": "브라우저를 여는 명령에 전달할 인수입니다. ${auto-detect-url}을 사용하여 서버가 수신하는 주소를 자동으로 사용하세요.",
  "generateOptionsSchema.launchBrowser.linux.command.description": "웹 브라우저를 시작할 실행 파일입니다.",
  "generateOptionsSchema.launchBrowser.linux.description": "Linux 관련 웹 실행 구성 옵션입니다. 기본적으로 `xdg-open`을 사용하여 브라우저를 시작합니다.",
  "generateOptionsSchema.launchBrowser.osx.args.description": "브라우저를 여는 명령에 전달할 인수입니다. ${auto-detect-url}을 사용하여 서버가 수신하는 주소를 자동으로 사용하세요.",
  "generateOptionsSchema.launchBrowser.osx.command.description": "웹 브라우저를 시작할 실행 파일입니다.",
  "generateOptionsSchema.launchBrowser.osx.description": "OSX 관련 웹 실행 구성 옵션입니다. 기본적으로 `open`을 사용하여 브라우저를 시작합니다.",
  "generateOptionsSchema.launchBrowser.windows.args.description": "브라우저를 여는 명령에 전달할 인수입니다. ${auto-detect-url}을 사용하여 서버가 수신하는 주소를 자동으로 사용하세요.",
  "generateOptionsSchema.launchBrowser.windows.command.description": "웹 브라우저를 시작할 실행 파일입니다.",
  "generateOptionsSchema.launchBrowser.windows.description": "Windows 관련 웹 실행 구성 옵션입니다. 기본적으로 `cmd /c start`를 사용하여 브라우저를 시작합니다.",
  "generateOptionsSchema.launchSettingsFilePath.markdownDescription": "launchSettings.json 파일의 경로입니다. 이것이 설정되지 않은 경우 디버거는 `{cwd}/Properties/launchSettings.json`에서 검색합니다.",
  "generateOptionsSchema.launchSettingsProfile.description": "지정된 경우 사용할 launchSettings.json의 프로필 이름을 나타냅니다. launchSettings.json이 없으면 무시됩니다. launchSettings.json은 'launchSettingsFilePath' 속성 또는 {cwd}/Properties/launchSettings.json이 설정되지 않은 경우 지정된 경로에서 읽혀집니다. 이 항목이 null 또는 빈 문자열로 설정되면 launchSettings.json이 무시됩니다. 이 값을 지정하지 않으면 첫 번째 '프로젝트' 프로필이 사용됩니다.",
  "generateOptionsSchema.logging.browserStdOut.markdownDescription": "웹 브라우저 실행의 stdout 텍스트를 출력 창에 기록해야 하는지 여부를 결정하는 플래그입니다. 이 옵션의 기본값은 `true`입니다.",
  "generateOptionsSchema.logging.consoleUsageMessage.description": "대상 프로세스가 'Console.Read*' API를 호출하고 stdin이 콘솔로 리디렉션될 때 메시지가 기록되는지 여부를 제어합니다.",
  "generateOptionsSchema.logging.description": "출력 창에 기록해야 하는 메시지 유형을 결정하는 플래그입니다.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.all.enumDescription": "모든 디버거 API 호출을 인쇄합니다. 매우 자세한 활동입니다.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.error.enumDescription": "디버거 API 호출에서 오류를 인쇄합니다.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.markdownDescription": "Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h에 대한 API 호출을 출력 창에 인쇄해야 하는지를 제어합니다. 이 옵션은 기본적으로 'none'입니다.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.none.enumDescription": "추적 API 호출 사용 안 함",
  "generateOptionsSchema.logging.diagnosticsLog.debugRuntimeEventTracing.markdownDescription": "기본 런타임에 의해 발생한 이벤트에 대한 자세한 정보 추적을 사용하도록 설정해야 하는지 여부를 결정하는 플래그입니다. 이 옵션의 기본값은 'false'입니다.",
  "generateOptionsSchema.logging.diagnosticsLog.description": "디버거의 진단 로그에서 출력 창으로 인쇄되는 메시지를 제어하는 설정입니다. 이 로그는 디버거 문제를 해결하는 데 도움이 됩니다.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.error.enumDescription": "오류 수준 진단 메시지를 인쇄합니다.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.important.enumDescription": "중요한 진단 메시지를 인쇄합니다.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.markdownDescription": "디버거의 디스패처에서 출력 창으로 인쇄되는 메시지를 제어합니다. 지정하지 않으면 자세한 로그 설정 중 하나('debugEngineAPITracing', 'debugRuntimeEventTracing', 'expressionEvaluationTracing' 또는 'startDebuggingTracing')를 사용하도록 설정하지 않는 한 기본값은 'none'으로 설정됩니다. 이 경우 기본값은 'normal'으로 변경됩니다.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.none.enumDescription": "추가 진단 메시지를 인쇄하지 마세요.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.normal.enumDescription": "자세한 정보가 아닌 진단 메시지를 모두 인쇄합니다.",
  "generateOptionsSchema.logging.diagnosticsLog.expressionEvaluationTracing.markdownDescription": "식 평가에 대한 자세한 정보 추적을 사용할지 여부를 결정하는 플래그입니다. 이 옵션의 기본값은 `false`입니다.",
  "generateOptionsSchema.logging.diagnosticsLog.protocolMessages.markdownDescription": "C# 디버거와 UI 간에 교환된 DAP 프로토콜 메시지를 출력 창에 기록해야 하는지 여부를 결정하는 플래그입니다. 이 옵션의 기본값은 'false'입니다.",
  "generateOptionsSchema.logging.diagnosticsLog.startDebuggingTracing.markdownDescription": "시작 디버깅에 대한 자세한 정보 추적을 사용할지 여부를 결정하는 플래그입니다. 이 옵션의 기본값은 'false'입니다.",
  "generateOptionsSchema.logging.elapsedTiming.markdownDescription": "true인 경우 프로토콜 메시지 로깅에는 `adapterElapsedTime` 및 `engineElapsedTime` 속성이 포함되어 요청에 소요된 시간(마이크로초)을 나타냅니다. 이 옵션의 기본값은 `false`입니다.",
  "generateOptionsSchema.logging.engineLogging.deprecationMessage": "'logging.engineLogging' 설정은 'logging.diagnosticsLog.protocolMessages'에 대해 더 이상 사용되지 않습니다.",
  "generateOptionsSchema.logging.exceptions.markdownDescription": "예외 메시지를 출력 창에 기록해야 하는지 여부를 결정하는 플래그입니다. 이 옵션의 기본값은 `true`입니다.",
  "generateOptionsSchema.logging.moduleLoad.markdownDescription": "모듈 로드 이벤트를 출력 창에 기록해야 하는지 여부를 결정하는 플래그입니다. 이 옵션의 기본값은 `true`입니다.",
  "generateOptionsSchema.logging.processExit.markdownDescription": "대상 프로세스가 종료되거나 디버깅이 중지될 때 메시지를 기록할지 여부를 제어합니다. 이 옵션의 기본값은 `true`입니다.",
  "generateOptionsSchema.logging.programOutput.markdownDescription": "외부 콘솔을 사용하지 않을 때 프로그램 출력을 출력 창에 기록해야 하는지 여부를 결정하는 플래그입니다. 이 옵션의 기본값은 `true`입니다.",
  "generateOptionsSchema.logging.threadExit.markdownDescription": "대상 프로세스의 스레드가 종료될 때 메시지를 기록할지 여부를 제어합니다. 이 옵션의 기본값은 `false`입니다.",
  "generateOptionsSchema.pipeTransport.debuggerPath.description": "대상 컴퓨터의 디버거에 대한 전체 경로입니다.",
  "generateOptionsSchema.pipeTransport.description": "존재하는 경우 이는 VS Code와 .NET Core 디버거 백 엔드 실행 파일(vsdbg) 간에 표준 입력/출력을 릴레이하는 파이프로 다른 실행 파일을 사용하여 원격 컴퓨터에 연결하도록 디버거에 지시합니다.",
  "generateOptionsSchema.pipeTransport.linux.description": "Linux 관련 파이프 실행 구성 옵션",
  "generateOptionsSchema.pipeTransport.linux.pipeArgs.0.description": "파이프 프로그램에 전달된 명령줄 인수입니다. pipeArgs의 토큰 ${debuggerCommand}는 전체 디버거 명령으로 대체되며 이 토큰은 다른 인수와 함께 인라인으로 지정할 수 있습니다. ${debuggerCommand}가 어떤 인수에도 사용되지 않으면 대신 전체 디버거 명령이 인수 목록 끝에 추가됩니다.",
  "generateOptionsSchema.pipeTransport.linux.pipeArgs.1.description": "파이프 프로그램에 전달된 명령줄 인수의 문자열화된 버전입니다. pipeArgs의 토큰 ${debuggerCommand}은(는) 전체 디버거 명령으로 대체되며 이 토큰은 다른 인수와 함께 인라인으로 지정할 수 있습니다. ${debuggerCommand}가 어떤 인수에도 사용되지 않으면 대신 전체 디버거 명령이 인수 목록 끝에 추가됩니다.",
  "generateOptionsSchema.pipeTransport.linux.pipeCwd.description": "파이프 프로그램의 작업 디렉터리에 대한 정규화된 경로입니다.",
  "generateOptionsSchema.pipeTransport.linux.pipeEnv.description": "파이프 프로그램에 전달되는 환경 변수입니다.",
  "generateOptionsSchema.pipeTransport.linux.pipeProgram.description": "실행할 정규화된 파이프 명령입니다.",
  "generateOptionsSchema.pipeTransport.linux.quoteArgs.description": "인용해야 하는 문자(예: 공백)를 포함하는 인수를 인용해야 합니까? 기본값은 'true'입니다. false로 설정하면 디버거 명령이 더 이상 자동으로 인용되지 않습니다.",
  "generateOptionsSchema.pipeTransport.osx.description": "OSX 관련 파이프 실행 구성 옵션",
  "generateOptionsSchema.pipeTransport.osx.pipeArgs.0.description": "파이프 프로그램에 전달된 명령줄 인수입니다. pipeArgs의 토큰 ${debuggerCommand}는 전체 디버거 명령으로 대체되며 이 토큰은 다른 인수와 함께 인라인으로 지정할 수 있습니다. ${debuggerCommand}가 어떤 인수에도 사용되지 않으면 대신 전체 디버거 명령이 인수 목록 끝에 추가됩니다.",
  "generateOptionsSchema.pipeTransport.osx.pipeArgs.1.description": "파이프 프로그램에 전달된 명령줄 인수의 문자열화된 버전입니다. pipeArgs의 토큰 ${debuggerCommand}은(는) 전체 디버거 명령으로 대체되며 이 토큰은 다른 인수와 함께 인라인으로 지정할 수 있습니다. ${debuggerCommand}가 어떤 인수에도 사용되지 않으면 대신 전체 디버거 명령이 인수 목록 끝에 추가됩니다.",
  "generateOptionsSchema.pipeTransport.osx.pipeCwd.description": "파이프 프로그램의 작업 디렉터리에 대한 정규화된 경로입니다.",
  "generateOptionsSchema.pipeTransport.osx.pipeEnv.description": "파이프 프로그램에 전달되는 환경 변수입니다.",
  "generateOptionsSchema.pipeTransport.osx.pipeProgram.description": "실행할 정규화된 파이프 명령입니다.",
  "generateOptionsSchema.pipeTransport.osx.quoteArgs.description": "인용해야 하는 문자(예: 공백)를 포함하는 인수를 인용해야 합니까? 기본값은 'true'입니다. false로 설정하면 디버거 명령이 더 이상 자동으로 인용되지 않습니다.",
  "generateOptionsSchema.pipeTransport.pipeArgs.0.description": "파이프 프로그램에 전달된 명령줄 인수입니다. pipeArgs의 토큰 ${debuggerCommand}는 전체 디버거 명령으로 대체되며 이 토큰은 다른 인수와 함께 인라인으로 지정할 수 있습니다. ${debuggerCommand}가 어떤 인수에도 사용되지 않으면 대신 전체 디버거 명령이 인수 목록 끝에 추가됩니다.",
  "generateOptionsSchema.pipeTransport.pipeArgs.1.description": "파이프 프로그램에 전달된 명령줄 인수의 문자열화된 버전입니다. pipeArgs의 토큰 ${debuggerCommand}은(는) 전체 디버거 명령으로 대체되며 이 토큰은 다른 인수와 함께 인라인으로 지정할 수 있습니다. ${debuggerCommand}가 어떤 인수에도 사용되지 않으면 대신 전체 디버거 명령이 인수 목록 끝에 추가됩니다.",
  "generateOptionsSchema.pipeTransport.pipeCwd.description": "파이프 프로그램의 작업 디렉터리에 대한 정규화된 경로입니다.",
  "generateOptionsSchema.pipeTransport.pipeEnv.description": "파이프 프로그램에 전달되는 환경 변수입니다.",
  "generateOptionsSchema.pipeTransport.pipeProgram.description": "실행할 정규화된 파이프 명령입니다.",
  "generateOptionsSchema.pipeTransport.quoteArgs.description": "인용해야 하는 문자(예: 공백)를 포함하는 인수를 인용해야 합니까? 기본값은 'true'입니다. false로 설정하면 디버거 명령이 더 이상 자동으로 인용되지 않습니다.",
  "generateOptionsSchema.pipeTransport.windows.description": "Windows 관련 파이프 실행 구성 옵션",
  "generateOptionsSchema.pipeTransport.windows.pipeArgs.0.description": "파이프 프로그램에 전달된 명령줄 인수입니다. pipeArgs의 토큰 ${debuggerCommand}는 전체 디버거 명령으로 대체되며 이 토큰은 다른 인수와 함께 인라인으로 지정할 수 있습니다. ${debuggerCommand}가 어떤 인수에도 사용되지 않으면 대신 전체 디버거 명령이 인수 목록 끝에 추가됩니다.",
  "generateOptionsSchema.pipeTransport.windows.pipeArgs.1.description": "파이프 프로그램에 전달된 명령줄 인수의 문자열화된 버전입니다. pipeArgs의 토큰 ${debuggerCommand}은(는) 전체 디버거 명령으로 대체되며 이 토큰은 다른 인수와 함께 인라인으로 지정할 수 있습니다. ${debuggerCommand}가 어떤 인수에도 사용되지 않으면 대신 전체 디버거 명령이 인수 목록 끝에 추가됩니다.",
  "generateOptionsSchema.pipeTransport.windows.pipeCwd.description": "파이프 프로그램의 작업 디렉터리에 대한 정규화된 경로입니다.",
  "generateOptionsSchema.pipeTransport.windows.pipeEnv.description": "파이프 프로그램에 전달되는 환경 변수입니다.",
  "generateOptionsSchema.pipeTransport.windows.pipeProgram.description": "실행할 정규화된 파이프 명령입니다.",
  "generateOptionsSchema.pipeTransport.windows.quoteArgs.description": "인용해야 하는 문자(예: 공백)를 포함하는 인수를 인용해야 합니까? 기본값은 'true'입니다. false로 설정하면 디버거 명령이 더 이상 자동으로 인용되지 않습니다.",
  "generateOptionsSchema.processId.0.markdownDescription": "연결할 프로세스 ID입니다. 첨부할 실행 중인 프로세스 목록을 가져오려면 \"\"를 사용하세요. `processId`가 사용된 경우 `processName`을 사용할 수 없습니다.",
  "generateOptionsSchema.processId.1.markdownDescription": "연결할 프로세스 ID입니다. 첨부할 실행 중인 프로세스 목록을 가져오려면 \"\"를 사용하세요. `processId`가 사용된 경우 `processName`을 사용할 수 없습니다.",
  "generateOptionsSchema.processName.markdownDescription": "연결할 프로세스 이름입니다. 이것을 사용하는 경우 `processId`를 사용할 수 없습니다.",
  "generateOptionsSchema.program.markdownDescription": "시작할 애플리케이션 dll 또는 .NET Core 호스트 실행 실행할 애플리케이션 dll 또는 .NET Core 호스트 실행 파일의 경로입니다.\r\n이 속성은 일반적으로 `${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)` 형식을 취합니다.\r\n\r\n예: `${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll`\r\n\r\n어디:\r\n`(target-framework)`는 디버깅된 프로젝트가 빌드되는 프레임워크입니다. 이것은 일반적으로 프로젝트 파일에서 `TargetFramework` 속성으로 찾을 수 있습니다.\r\n\r\n`(project-name.dll)`은 디버깅된 프로젝트의 빌드 출력 dll의 이름입니다. 일반적으로 프로젝트 파일 이름과 동일하지만 확장자가 '.dll'입니다.",
  "generateOptionsSchema.requireExactSource.markdownDescription": "현재 원본 코드가 pdb와 일치하도록 요구하는 플래그입니다. 이 옵션의 기본값은 `true`입니다.",
  "generateOptionsSchema.sourceFileMap.markdownDescription": "빌드 시간 경로를 로컬 원본 위치에 매핑합니다. 빌드 시간 경로의 모든 인스턴스는 로컬 원본 경로로 대체됩니다.\r\n\r\n예:\r\n\r\n`{\"<build-path>\":\"<local-source-path>\"}`",
  "generateOptionsSchema.sourceLinkOptions.additionalItems.enabled.markdownDescription": "이 URL에 대해 Source Link가 활성화되어 있나요? 지정하지 않으면 이 옵션의 기본값은 `true`입니다.",
  "generateOptionsSchema.sourceLinkOptions.markdownDescription": "Source Link가 웹 서버에 연결하는 방법을 제어하는 옵션입니다. [정보 더 보기](https://aka.ms/VSCode-DotNet-SourceLink)",
  "generateOptionsSchema.stopAtEntry.markdownDescription": "true인 경우 디버거는 대상의 진입점에서 중지해야 합니다. 이 옵션의 기본값은 `false`입니다.",
  "generateOptionsSchema.suppressJITOptimizations.markdownDescription": "true인 경우 최적화된 모듈(릴리스 구성에서 컴파일된 .dll)이 대상 프로세스에 로드될 때 디버거는 최적화가 비활성화된 코드를 생성하도록 Just-In-Time 컴파일러에 요청합니다. [정보 더 보기](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)",
  "generateOptionsSchema.symbolOptions.cachePath.description": "기호 서버에서 다운로드한 기호가 캐시되어야 하는 디렉토리입니다. 지정하지 않으면 Windows에서 디버거는 기본적으로 %TEMP%\\SymbolCache로 설정되고 Linux 및 macOS에서는 디버거가 기본적으로 ~/.dotnet/symbolcache로 설정됩니다.",
  "generateOptionsSchema.symbolOptions.description": "기호(.pdb 파일)를 찾아서 로드하는 방법을 제어하는 옵션입니다.",
  "generateOptionsSchema.symbolOptions.moduleFilter.description": "디버거에서 기호(.pdb 파일)를 로드하려고 시도할 모듈(.dll 파일)을 제어하는 옵션을 제공합니다.",
  "generateOptionsSchema.symbolOptions.moduleFilter.excludedModules.description": "디버거에서 기호를 로드하지 않아야 하는 모듈의 배열입니다. 와일드카드(예: MyCompany.*.dll)가 지원됩니다.\r\n\r\n'모드'가 'loadAllButExcluded'로 설정되어 있지 않으면 이 속성은 무시됩니다.",
  "generateOptionsSchema.symbolOptions.moduleFilter.includeSymbolsNextToModules.description": "True 이면 'includedModules' 배열에 없는 모듈에 대해 디버거는 모듈 자체 및 시작 실행 파일 옆을 계속 확인하지만 기호 검색 목록의 경로는 확인하지 않습니다. 이 옵션의 기본값은 'true'입니다.\r\n\r\n'모드'가 'loadOnlyIncluded'로 설정되어 있지 않으면 이 속성은 무시됩니다.",
  "generateOptionsSchema.symbolOptions.moduleFilter.includeSymbolsOnDemand.description": "true인 경우 'includedModules' 배열에 없는 모듈의 경우 디버거는 모듈을 한 단계씩 실행하려고 할 때와 같이 기호가 필요한 경우 기호를 다운로드하려고 시도합니다. 이 옵션의 기본값은 'true'입니다.\r\n\r\n'mode'가 'loadOnlyIncluded'로 설정되어 있지 않으면 이 속성은 무시됩니다.",
  "generateOptionsSchema.symbolOptions.moduleFilter.includedModules.description": "디버거에서 기호를 로드해야 하는 모듈의 배열입니다. 와일드카드(예: MyCompany.*.dll)가 지원됩니다.\r\n\r\n'모드'가 'loadOnlyIncluded'로 설정되어 있지 않으면 이 속성은 무시됩니다.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.description": "두 가지 기본 운영 모드 중 모듈 필터가 작동하는 모드를 제어합니다.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.loadAllButExcluded.enumDescription": "모듈이 'excludedModules' 배열에 있지 않으면 모든 모듈에 대한 기호를 로드합니다.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.loadOnlyIncluded.enumDescription": "'includedModules' 배열에 있거나 'includeSymbolsNextToModules' 설정을 통해 포함되는 경우가 아니면 모듈에 대한 기호를 로드하지 않도록 합니다.",
  "generateOptionsSchema.symbolOptions.searchMicrosoftSymbolServer.description": "'true'인 경우 Microsoft 기호 서버(https​://msdl.microsoft.com​/download/symbols)가 기호 검색 경로에 추가됩니다. 지정하지 않으면 이 옵션의 기본값은 'false'입니다.",
  "generateOptionsSchema.symbolOptions.searchNuGetOrgSymbolServer.description": "'true'이면 NuGet.org 기호 서버(https​://symbols.nuget.org​/download/symbols)가 기호 검색 경로에 추가됩니다. 지정하지 않으면 이 옵션의 기본값은 'false'입니다.",
  "generateOptionsSchema.symbolOptions.searchPaths.description": ".pdb 파일을 검색하는 기호 서버 URL(example: http​://MyExampleSymbolServer) 또는 디렉터리(example: /build/symbols)의 배열입니다. 이러한 디렉터리가 모듈 및 pdb가 원래 삭제된 경로 옆에 있는 기본 위치 외에 검색됩니다.",
  "generateOptionsSchema.targetArchitecture.markdownDescription": "[로컬 macOS 디버깅에서만 지원됨]\r\n\r\n디버기의 아키텍처. 이 매개 변수를 설정하지 않으면 자동으로 검색됩니다. 허용되는 값은 `x86_64` 또는 `arm64`입니다.",
  "generateOptionsSchema.targetOutputLogPath.description": "설정하면 대상 애플리케이션이 stdout 및 stderr(예: Console.WriteLine)에 쓰는 텍스트가 지정된 파일에 저장됩니다. 콘솔이 internalConsole 이외의 것으로 설정된 경우 이 옵션은 무시됩니다(예: '${workspaceFolder}/out.txt')",
  "generateOptionsSchema.type.markdownDescription": "디버깅할 코드 형식입니다. .NET Core 디버깅의 경우 `coreclr`, 데스크톱 .NET Framework의 경우 `clr`일 수 있습니다. 데스크톱 프레임워크는 Windows 전용이므로 `clr`은 Windows에서만 작동합니다.",
  "viewsWelcome.debug.contents": "[빌드와 디버그를 위한 C# 자산 생성](command:dotnet.generateAssets)\r\n\r\nlaunch.json에 관해 자세히 알아보려면 [C# 디버깅을 위한 launch.json 구성](https://aka.ms/VSCode-CS-LaunchJson)을 참조하세요."
}