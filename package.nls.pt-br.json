{
  "command.csharp.attachToProcess": "Anexar a um processo .NET 5+ ou .NET Core",
  "command.csharp.downloadDebugger": "Baixar o Depurador .NET Core",
  "command.csharp.listProcess": "Listar processo para anexar",
  "command.csharp.listRemoteDockerProcess": "Listar processos na conexão Docker",
  "command.csharp.listRemoteProcess": "Listar processos em conexão remota para anexar",
  "command.csharp.reportIssue": "Relatar um problema",
  "command.csharp.showDecompilationTerms": "Mostrar o contrato de termos do descompilador",
  "command.dotnet.generateAssets.currentProject": "Gerar Ativos para Compilação e Depuração",
  "command.dotnet.openSolution": "Abrir Solução",
  "command.dotnet.restartServer": "Reiniciar o Servidor de Linguagem",
  "command.dotnet.restore.all": "Restaurar Todos os Projetos",
  "command.dotnet.restore.project": "Restaurar Projeto",
  "command.dotnet.test.debugTestsInContext": "Testes de Depuração no Contexto",
  "command.dotnet.test.runTestsInContext": "Executar Testes no Contexto",
  "command.extension.showRazorCSharpWindow": "Mostrar Navalha CSharp",
  "command.extension.showRazorHtmlWindow": "Mostrar Razor HTML",
  "command.o.fixAll.document": "Corrigir todas as ocorrências de um problema de código no documento",
  "command.o.fixAll.project": "Corrigir todas as ocorrências de um problema de código no projeto",
  "command.o.fixAll.solution": "Corrigir todas as ocorrências de um problema de código na solução",
  "command.o.pickProjectAndStart": "Selecionar Projeto",
  "command.o.reanalyze.allProjects": "Analisar todos os projetos",
  "command.o.reanalyze.currentProject": "Analisar o projeto atual",
  "command.o.restart": "Reiniciar OmniSharp",
  "command.razor.reportIssue": "Relatar um problema do Razor",
  "configuration.csharp.inlayHints.enableInlayHintsForImplicitObjectCreation": "Mostrar dicas para a criação de objeto implícito",
  "configuration.csharp.inlayHints.enableInlayHintsForImplicitVariableTypes": "Mostrar as dicas para as variáveis com tipos inferidos",
  "configuration.csharp.inlayHints.enableInlayHintsForIndexerParameters": "Mostrar dicas para indexadores",
  "configuration.csharp.inlayHints.enableInlayHintsForLambdaParameterTypes": "Mostrar as dicas para os tipos de parâmetro lambda",
  "configuration.csharp.inlayHints.enableInlayHintsForTypes": "Exibir as dicas embutidas de tipo",
  "configuration.dotnet.autoInsert.enableAutoInsert": "Habilitar a inserção automática de comentários de documentação.",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope": "Execute a análise de código em segundo plano para: (Anteriormente `omnisharp.enableRoslynAnalyzers`)",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.fullSolution": "Solução inteira",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.none": "Nenhum",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.openFiles": "Abrir documentos",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope": "Mostrar erros e alertas do compilador para:",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.fullSolution": "Solução inteira",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.none": "Nenhum",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.openFiles": "Abrir documentos",
  "configuration.dotnet.codeLens.enableReferencesCodeLens": "Especifica se as referências CodeLens devem ser mostradas. (Anteriormente `csharp.referencesCodeLens.enabled`)",
  "configuration.dotnet.codeLens.enableTestsCodeLens": "Especifica se o teste de execução e depuração CodeLens deve ser mostrado. (Anteriormente `csharp.testsCodeLens.enabled`)",
  "configuration.dotnet.completion.provideRegexCompletions": "Mostrar expressões regulares na lista de conclusão.",
  "configuration.dotnet.completion.showCompletionItemsFromUnimportedNamespaces": "Habilita o suporte para mostrar tipos e métodos de extensão não importados em listas de conclusão. Quando confirmado, a diretiva using apropriada será adicionada no topo do arquivo atual. (Anteriormente `omnisharp.enableImportCompletion`)",
  "configuration.dotnet.completion.showNameCompletionSuggestions": "Execute a conclusão automática do nome do objeto para os membros que você selecionou recentemente.",
  "configuration.dotnet.completion.triggerCompletionInArgumentLists": "Mostrar automaticamente a lista de conclusão nas listas de argumentos",
  "configuration.dotnet.defaultSolution.description": "O caminho da solução padrão a ser aberta no workspace ou definido como 'desabilitado' para ignorá-la. (Anteriormente `omnisharp.defaultLaunchSolution`)",
  "configuration.dotnet.enableXamlTools": "Habilita ferramentas XAML ao usar o Kit de Desenvolvimento em C#",
  "configuration.dotnet.formatting.organizeImportsOnFormat": "Especifica se as diretivas 'usando' devem ser agrupadas e classificadas durante a formatação do documento. (Anteriormente `omnisharp.organizeImportsOnFormat`)",
  "configuration.dotnet.highlighting.highlightRelatedJsonComponents": "Destaque os componentes JSON relacionados sob o cursor.",
  "configuration.dotnet.highlighting.highlightRelatedRegexComponents": "Destaque os componentes de expressão regular relacionados sob o cursor.",
  "configuration.dotnet.inlayHints.enableInlayHintsForLiteralParameters": "Mostrar as dicas para os literais",
  "configuration.dotnet.inlayHints.enableInlayHintsForObjectCreationParameters": "Mostrar as dicas para as expressões 'new'",
  "configuration.dotnet.inlayHints.enableInlayHintsForOtherParameters": "Mostrar as dicas para tudo",
  "configuration.dotnet.inlayHints.enableInlayHintsForParameters": "Exibir dicas de nomes de parâmetros embutidos",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix": "Suprimir as dicas quando os nomes de parâmetros diferirem somente pelo sufixo",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName": "Suprimir as dicas quando o argumento corresponder ao nome do parâmetro",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent": "Suprimir as dicas quando o nome do parâmetro corresponder à intenção do método",
  "configuration.dotnet.navigation.navigateToDecompiledSources": "Habilite a navegação para fontes não compatíveis.",
  "configuration.dotnet.navigation.navigateToSourceLinkAndEmbeddedSources": "Habilite a navegação para o link de origem e fontes inseridas.",
  "configuration.dotnet.preferCSharpExtension": "Força o carregamento dos projetos somente com a extensão C#.  Isso pode ser útil ao usar tipos de projetos herdados que não são suportados pelo C# Dev Kit. (Requer recarga da janela)",
  "configuration.dotnet.projects.binaryLogPath": "Define um caminho no qual os registros binários do MSBuild são gravados ao carregar projetos para ajudar a diagnosticar erros de carregamento.",
  "configuration.dotnet.projects.enableAutomaticRestore": "Habilita a restauração automática do NuGet se a extensão detectar que os ativos estão ausentes.",
  "configuration.dotnet.quickInfo.showRemarksInQuickInfo": "Mostrar informações de comentários ao exibir o símbolo.",
  "configuration.dotnet.server.componentPaths": "Permite substituir o caminho da pasta para componentes internos do servidor de linguagem (por exemplo, substituir o caminho .roslynDevKit no diretório de extensão para usar componentes compilados localmente)",
  "configuration.dotnet.server.componentPaths.roslynDevKit": "Substitui o caminho da pasta para o componente .roslynDevKit do servidor de linguagem",
  "configuration.dotnet.server.componentPaths.xamlTools": "Substitui o caminho da pasta para o componente .xamlTools do servidor de linguagem",
  "configuration.dotnet.server.crashDumpPath": "Define um caminho de pasta onde os despejos de memória serão gravados se o servidor de idioma travar.  Deve ser gravável pelo usuário.",
  "configuration.dotnet.server.extensionPaths": "Substituir o caminho para os argumentos --extension do servidor de idiomas",
  "configuration.dotnet.server.path": "Especifica o caminho absoluto para o executável do servidor (LSP ou O#). Quando deixado em branco, a versão fixada na extensão C# é usada. (Anteriormente `omnisharp.path`)",
  "configuration.dotnet.server.startTimeout": "Especifica um tempo limite (em ms) para o cliente iniciar e conectar-se com êxito ao servidor de idioma.",
  "configuration.dotnet.server.suppressLspErrorToasts": "Suprime a exibição de notificações do erro se o servidor encontrar um erro recuperável.",
  "configuration.dotnet.server.suppressMiscellaneousFilesToasts": "Suprima a exibição de notificações de aviso do sistema se o documento ativo estiver fora do workspace aberto.",
  "configuration.dotnet.server.useServerGC": "Configure o servidor de linguagem para usar a coleta de lixo do servidor do .NET.  A coleta de lixo do servidor geralmente fornece um melhor desempenho às custas de um consumo de memória mais alto.",
  "configuration.dotnet.server.waitForDebugger": "Passa o sinalizador --debug ao iniciar o servidor para permitir que um depurador seja anexado. (Anteriormente `omnisharp.waitForDebugger`)",
  "configuration.dotnet.symbolSearch.searchReferenceAssemblies": "Pesquisar símbolos em montagens de referência. Afeta os recursos que exigem pesquisa de símbolos, como adicionar importações.",
  "configuration.dotnet.typeMembers.memberInsertionLocation": "O local de inserção de propriedades, eventos e métodos Ao implementar interface ou classe abstrata.",
  "configuration.dotnet.typeMembers.memberInsertionLocation.atTheEnd": "Coloque-os no final.",
  "configuration.dotnet.typeMembers.memberInsertionLocation.withOtherMembersOfTheSameKind": "Coloque-os com outros membros do mesmo tipo.",
  "configuration.dotnet.typeMembers.propertyGenerationBehavior": "Comportamento de geração de propriedades ao implementar interface ou classe abstrata.",
  "configuration.dotnet.typeMembers.propertyGenerationBehavior.preferAutoProperties": "Preferir propriedades automáticas.",
  "configuration.dotnet.typeMembers.propertyGenerationBehavior.preferThrowingProperties": "Preferir propriedades de lançamento.",
  "configuration.dotnet.unitTestDebuggingOptions": "Opções a serem usadas com o depurador ao iniciar a depuração de teste de unidade. (Anteriormente `csharp.unitTestDebuggingOptions`)",
  "configuration.dotnet.unitTests.runSettingsPath": "Caminho para o arquivo .runsettings que deve ser usado ao executar testes de unidade. (Anteriormente, 'omnisharp.testRunSettings')",
  "configuration.omnisharp.autoStart": "Especifica se o servidor OmniSharp será iniciado automaticamente ou não. Se for falso, o OmniSharp pode ser iniciado com o comando \"Reiniciar OmniSharp'",
  "configuration.omnisharp.csharp.format.enable": "Habilitar/desabilitar o formatador JSON padrão (requer reinicialização).",
  "configuration.omnisharp.csharp.maxProjectFileCountForDiagnosticAnalysis": "Especifica o número máximo de arquivos para os quais os diagnósticos são relatados em todo o espaço de trabalho. Se esse limite for excedido, o diagnóstico será mostrado somente para os arquivos abertos no momento. Especifique 0 ou menos para desabilitar completamente o limite.",
  "configuration.omnisharp.csharp.referencesCodeLens.filteredSymbols": "Matriz de nomes de símbolo personalizados para os quais o CodeLens deve ser desabilitado.",
  "configuration.omnisharp.csharp.semanticHighlighting.enabled": "Habilitar/desabilitar o Realce Semântico para os arquivos C# (arquivos Razor sem suporte no momento). O padrão é falso. Feche os arquivos abertos para que as alterações entrem em vigor.",
  "configuration.omnisharp.csharp.showOmnisharpLogOnError": "Mostra o log OmniSharp no painel Saída quando OmniSharp relata um erro.",
  "configuration.omnisharp.csharp.suppressBuildAssetsNotification": "Suprime a janela de notificação para adicionar ativos ausentes para compilar ou depurar o aplicativo.",
  "configuration.omnisharp.csharp.suppressDotnetInstallWarning": "Suprime o aviso de que o SDK do .NET Core não está no caminho.",
  "configuration.omnisharp.csharp.suppressDotnetRestoreNotification": "Suprimir a janela de notificação para executar um “dotnet restore” quando as dependências não puderem ser resolvidas.",
  "configuration.omnisharp.csharp.suppressHiddenDiagnostics": "Suprime o diagnóstico “oculto” (como “desnecessário usar diretivas”) de ser exibido no editor ou no painel Problemas.",
  "configuration.omnisharp.csharp.suppressProjectJsonWarning": "Suprimir o aviso de project.json não é mais um formato de projeto com suporte para os aplicativos .NET Core",
  "configuration.omnisharp.disableMSBuildDiagnosticWarning": "Especifica se as notificações devem ser mostradas se o OmniSharp encontrar avisos ou erros ao carregar um projeto. Observe que esses avisos/erros são sempre emitidos para o log do OmniSharp",
  "configuration.omnisharp.dotNetCliPaths": "Caminhos para um download local da CLI do .NET a ser usado para executar qualquer código de usuário.",
  "configuration.omnisharp.dotnet.server.useOmnisharp": "Alterna para usar o servidor Omnisharp para recursos de idioma quando habilitado (requer reinicialização). Essa opção não será respeitada com o Kit de Desenvolvimento em C# instalado.",
  "configuration.omnisharp.dotnetPath": "Especifica o caminho para um diretório de instalação do dotnet a ser usado em vez do padrão do sistema. Isso só influencia a instalação do dotnet a ser usada para hospedar o próprio servidor OmniSharp. Exemplo: \"/home/username/mycustomdotnetdirectory\".",
  "configuration.omnisharp.enableAsyncCompletion": "(EXPERIMENTAL) Habilita o suporte para resolver as edições de conclusão de forma assíncrona. Isso pode acelerar o tempo de atividade para mostrar a lista de conclusão, especialmente as listas de substituição e de conclusão de métodos parciais, ao custo de pequenos atrasos após a inserção de um item de conclusão. A maioria dos itens de conclusão não terá impacto perceptível com esse recurso, mas digitar imediatamente após a inserção de uma substituição ou conclusão de método parcial, antes que a inserção seja concluída, pode ter resultados imprevisíveis.",
  "configuration.omnisharp.enableDecompilationSupport": "Habilita o suporte para descompilar as referências externas em vez de exibir metadados.",
  "configuration.omnisharp.enableEditorConfigSupport": "Habilita o suporte para ler o estilo de código, a convenção de nomenclatura e as configurações do analisador do .editorconfig.",
  "configuration.omnisharp.enableLspDriver": "Habilita o suporte para o mecanismo baseado em protocolo de linguagem experimental (requer recarregamento para configurar as associações corretamente)",
  "configuration.omnisharp.enableMsBuildLoadProjectsOnDemand": "Se for verdadeiro, o sistema de projeto do MSBuild carregará apenas os projetos dos arquivos que foram abertos no editor. Essa configuração é útil para grandes bases de código C# e permite uma inicialização mais rápida dos recursos de navegação de código somente para projetos que são relevantes para o código que está sendo editado. Com essa configuração habilitada, o OmniSharp pode carregar menos projetos e, portanto, pode exibir listas de referência incompletas para os símbolos.",
  "configuration.omnisharp.loggingLevel": "Especifica o nível de saída de log do servidor OmniSharp.",
  "configuration.omnisharp.maxFindSymbolsItems": "O número máximo de itens que a operação “Acessar Símbolo no Workspace” pode mostrar. O limite é aplicado somente quando um número positivo é especificado aqui.",
  "configuration.omnisharp.maxProjectResults": "O número máximo de projetos a serem mostrados na lista suspensa “Selecionar Projeto” (máximo de 250).",
  "configuration.omnisharp.minFindSymbolsFilterLength": "O número mínimo de caracteres a serem inseridos antes da operação “Acessar Símbolo no Workspace” mostra os resultados.",
  "configuration.omnisharp.monoPath": "Especifica o caminho para uma instalação mono a ser usada quando \"useModernNet\" estiver definido como falso, em vez de o padrão do sistema. Exemplo: \"/Library/Frameworks/Mono.framework/Versions/Current\"",
  "configuration.omnisharp.projectFilesExcludePattern": "O padrão de exclusão usado pelo OmniSharp para localizar todos os arquivos do projeto.",
  "configuration.omnisharp.projectLoadTimeout": "O tempo que o Visual Studio Code aguardará para que o servidor OmniSharp seja iniciado. O tempo é expresso em segundos.",
  "configuration.omnisharp.razor.completion.commitElementsWithSpace": "Especifica se o auxiliar de marca e os elementos de componente devem ser confirmados com um espaço.",
  "configuration.omnisharp.razor.devmode": "Força a extensão a ser executada em um modo que habilita o desenvolvimento local do Razor.VSCode.",
  "configuration.omnisharp.razor.format.codeBlockBraceOnNextLine": "Força a chave de abertura após uma diretiva @code ou @functions a estar na linha seguinte.",
  "configuration.omnisharp.razor.format.enable": "Habilitar/desabilitar o formatador padrão do Razor.",
  "configuration.omnisharp.razor.plugin.path": "Substitui o caminho da dll do plug-in Razor.",
  "configuration.omnisharp.sdkIncludePrereleases": "Especifica se as versões prévias do SDK do .NET devem ser incluídas ao determinar qual versão deve ser usada no carregamento do projeto. Aplica-se quando \"useModernNet\" é definido como verdadeiro.",
  "configuration.omnisharp.sdkPath": "Especifica o caminho para uma instalação do SDK do .NET a ser usada para carregar o projeto em vez de a versão mais alta instalada. Aplica-se quando \"useModernNet\" é definido como verdadeiro. Exemplo: /home/username/dotnet/sdks/6.0.300.",
  "configuration.omnisharp.sdkVersion": "Especifica a versão do SDK do .NET a ser usada para carregar o projeto em vez de a versão mais alta instalada. Aplica-se quando \"useModernNet\" é definido como verdadeiro. Exemplo: 6.0.300.",
  "configuration.omnisharp.useEditorFormattingSettings": "Especifica se o OmniSharp deve usar as configurações do editor VS Code para formatar o código C# (uso de tabulações, tamanho do recuo).",
  "configuration.omnisharp.useModernNet.description": "Use a compilação OmniSharp para .NET 6. Esta versão _não_ suporta projetos que não sejam do estilo SDK .NET Framework, incluindo Unity. Projetos do Framework no estilo SDK, .NET Core e .NET 5+ devem ver melhorias significativas de desempenho.",
  "configuration.omnisharp.useModernNet.title": "Usar a compilação do .NET 6 da OmniSharp",
  "configuration.razor.languageServer.debug": "Especifica se é preciso aguardar o anexo de depuração ao iniciar o servidor de linguagem.",
  "configuration.razor.languageServer.directory": "Substitui o caminho para o diretório do Servidor de Linguagem Razor.",
  "configuration.razor.languageServer.forceRuntimeCodeGeneration": "(EXPERIMENTAL) Habilitar geração de código de tempo de design/tempo de execução combinado para arquivos Razor",
  "configuration.razor.languageServer.suppressLspErrorToasts": "Suprime a exibição de notificações do erro se o servidor encontrar um erro recuperável.",
  "configuration.razor.languageServer.useNewFormattingEngine": "Use o novo mecanismo de formatação Razor.",
  "configuration.razor.server.trace": "Especifica o nível de log a ser usado para o servidor Razor.",
  "debuggers.coreclr.configurationSnippets.description.attach": "Anexe o depurador do .NET (coreclr) a um processo em execução. Isso também pode ser feito usando o comando 'Anexar a um processo do .NET 5+ ou do .NET Core'.",
  "debuggers.coreclr.configurationSnippets.description.blazor-hosted": "Esse snippet é usado para iniciar um novo processo no depurador Blazor WebAssembly (blazorwasm), especificando o caminho para o executável a ser iniciado. Na maioria dos casos, o \".NET: O snippet de inicialização do projeto C# é uma opção melhor, mas esse snippet pode ser usado para ter controle total sobre todas as opções de inicialização. Esse snippet é para projetos hospedados do Blazor, que é um projeto que tem um aplicativo ASP.NET Core de back-end para atender aos seus arquivos.",
  "debuggers.coreclr.configurationSnippets.description.blazor-standalone": "Esse snippet é usado para iniciar um novo processo no depurador Blazor WebAssembly (blazorwasm). Na maioria dos casos, o \".NET: O snippet de inicialização do projeto C# é uma opção melhor, mas esse snippet pode ser usado para ter controle total sobre todas as opções de inicialização. Esse snippet é para projetos autônomos do Blazor, que é um projeto que não tem um aplicativo ASP.NET Core de back-end para atender aos seus arquivos.",
  "debuggers.coreclr.configurationSnippets.description.console-local": "Esse snippet é usado para iniciar um novo processo no depurador do .NET (coreclr), especificando o caminho para o executável a ser iniciado. Na maioria dos casos, o \".NET: O snippet de inicialização do projeto C# é uma opção melhor. Esse snippet é útil quando o projeto foi criado fora dessa instância do VS Code ou você deseja hospedar o código .NET em um executável personalizado, como uma versão específica de 'dotnet.exe'/'dotnet' ou o .NET Code é hospedado por um aplicativo nativo. Este snippet é para aplicativos de console.",
  "debuggers.coreclr.configurationSnippets.description.remote": "Este snippet mostra como depurar remotamente o código .NET **sem** usar a comunicação remota do VS Code. Ele deve ser usado nos casos em que você deseja compilar seu projeto localmente, mas o executa em outro computador.",
  "debuggers.coreclr.configurationSnippets.description.web-local": "Esse snippet é usado para iniciar um novo processo no depurador do .NET (coreclr), especificando o caminho para o executável a ser iniciado. Na maioria dos casos, o \".NET: O snippet de inicialização do projeto C# é uma opção melhor. Esse snippet é útil quando o projeto foi criado fora dessa instância do VS Code ou você deseja hospedar o código .NET em um executável personalizado, como uma versão específica de 'dotnet.exe'/'dotnet' ou o .NET Code é hospedado por um aplicativo nativo. Este snippet é para aplicativos Web (ASP.NET Core).",
  "debuggers.coreclr.configurationSnippets.label.attach-local": ".NET: Anexar a um processo do .NET",
  "debuggers.coreclr.configurationSnippets.label.attach-remote": ".NET: Depuração remota - Anexar a um processo do .NET",
  "debuggers.coreclr.configurationSnippets.label.blazor-hosted": ".NET: Web Assembly - Iniciar projeto Blazor hospedado",
  "debuggers.coreclr.configurationSnippets.label.blazor-standalone": ".NET: Web Assembly – Iniciar projeto autônomo do Blazor",
  "debuggers.coreclr.configurationSnippets.label.console-local": ".NET: Iniciar Arquivo executável (Console)",
  "debuggers.coreclr.configurationSnippets.label.console-remote": ".NET: Depuração remota - Iniciar Arquivo executável (console)",
  "debuggers.coreclr.configurationSnippets.label.web-local": ".NET: Iniciar Arquivo executável (Web)",
  "debuggers.dotnet.configurationSnippets.description": "Este snippet configura VS Code para depurar um projeto C#. As opções de depuração (exemplo: argumentos para o executável) podem ser configuradas por meio do arquivo '<project-directory>/Properties/launchSettings.json'.",
  "debuggers.dotnet.configurationSnippets.label": ".NET: Iniciar projeto C#",
  "debuggers.dotnet.launch.launchConfigurationId.description": "A ID de configuração de inicialização a ser usada. A cadeia de caracteres vazia usará a configuração ativa atual.",
  "debuggers.dotnet.launch.projectPath.description": "Caminho para o arquivo .csproj.",
  "generateOptionsSchema.args.0.description": "Argumentos de linha de comando passados para o programa.",
  "generateOptionsSchema.args.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passada para o programa.",
  "generateOptionsSchema.checkForDevCert.description": "Se você estiver iniciando um projeto da Web no Windows ou macOS e isso estiver habilitado, o depurador verificará se o computador possui um certificado HTTPS autoassinado usado para desenvolver servidores da Web em execução em pontos de extremidade https. Se não especificado, o padrão é verdadeiro quando `serverReadyAction` é definido. Esta opção não faz nada no Linux, VS Code remoto e cenários de IU da Web do VS Code. Se o certificado HTTPS não for encontrado ou não for confiável, o usuário será solicitado a instalá-lo/confiar nele.",
  "generateOptionsSchema.console.externalTerminal.enumDescription": "O processo de destino será executado dentro de seu próprio terminal externo. Ao usar esse modo, você precisará alternar o foco entre Visual Studio Code janela do terminal externo.",
  "generateOptionsSchema.console.integratedTerminal.enumDescription": "O processo de destino será executado dentro VS Code terminal integrado do cliente.",
  "generateOptionsSchema.console.internalConsole.enumDescription": "A entrada e a saída do console do processo de destino (stdin) (stdout/stderr) são roteados por meio do Console de Depuração VS Code.",
  "generateOptionsSchema.console.markdownDescription": "Indica em qual console o programa de destino deve ser iniciado. Veja https://aka.ms/VSCode-CS-LaunchJson-Console para mais informação.",
  "generateOptionsSchema.console.settingsDescription": "**Observação:** _This é usada apenas para projetos de console iniciados com a configuração de depuração 'dotnet' type_.\r\n\r\nIndica em qual console o programa de destino deve ser iniciado. Veja https://aka.ms/VSCode-CS-LaunchJson-Console para mais informação.",
  "generateOptionsSchema.cwd.description": "Caminho para o diretório de trabalho do programa que está sendo depurado. O padrão é o espaço de trabalho atual.",
  "generateOptionsSchema.debugServer.description": "Somente para desenvolvimento de extensão de depuração: se uma porta for especificada, o VS Code tentará se conectar a um adaptador de depuração em execução no modo do servidor",
  "generateOptionsSchema.enableStepFiltering.markdownDescription": "Sinalizador para habilitar o passo a passo sobre Propriedades e Operadores. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.env.description": "Variáveis de ambiente passadas para o programa.",
  "generateOptionsSchema.envFile.markdownDescription": "Variáveis de ambiente passadas para o programa por um arquivo. Por exemplo. `${workspaceFolder}/.env`",
  "generateOptionsSchema.expressionEvaluationOptions.allowFastEvaluate.description": "Quando verdadeiro (o estado padrão), o depurador tentará uma avaliação mais rápida simulando a execução de propriedades e métodos simples.",
  "generateOptionsSchema.expressionEvaluationOptions.allowImplicitFuncEval.description": "Quando true (o estado padrão), o depurador chamará automaticamente os métodos de propriedade `get` e outras chamadas de função implícitas.",
  "generateOptionsSchema.expressionEvaluationOptions.allowToString.markdownDescription": "Quando true (o estado padrão), o depurador chamará automaticamente `ToString` para formatar objetos. Esta opção não terá efeito se `allowImplicitFuncEval` for `false`.",
  "generateOptionsSchema.expressionEvaluationOptions.description": "Opções para controlar como o depurador avalia expressões em dicas de dados, nas seções \"Inspeção\" e \"Variáveis\" da exibição de depuração ou no Console de Depuração.",
  "generateOptionsSchema.expressionEvaluationOptions.showRawValues.description": "Quando for verdadeiro, o depurador mostrará a estrutura bruta de objetos em janelas de variáveis.",
  "generateOptionsSchema.externalConsole.markdownDescription": "O atributo `externalConsole` está preterido, use `console` em seu lugar. Esta opção padrão é `false`.",
  "generateOptionsSchema.justMyCode.markdownDescription": "Quando ativado (o padrão), o depurador apenas exibe e entra no código do usuário (\"Meu Código\"), ignorando o código do sistema e outros códigos otimizados ou que não possuem símbolos de depuração. [Mais informações](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)",
  "generateOptionsSchema.launchBrowser.args.description": "Os argumentos a serem passados ao comando para abrir o navegador. Isso é usado apenas se o elemento específico da plataforma (`osx`, `linux` ou `windows`) não especificar um valor para `args`. Use ${auto-detect-url} para usar automaticamente o endereço que o servidor está ouvindo.",
  "generateOptionsSchema.launchBrowser.description": "Descreve as opções para iniciar um navegador da Web como parte do lançamento",
  "generateOptionsSchema.launchBrowser.enabled.description": "Se a inicialização do navegador da web está habilitada. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.launchBrowser.linux.args.description": "Os argumentos a serem passados ao comando para abrir o navegador. Use ${auto-detect-url} para usar automaticamente o endereço que o servidor está ouvindo.",
  "generateOptionsSchema.launchBrowser.linux.command.description": "O executável que iniciará o navegador da web.",
  "generateOptionsSchema.launchBrowser.linux.description": "Opções de configuração de inicialização da Web específicas do Linux. Por padrão, isso iniciará o navegador usando `xdg-open`.",
  "generateOptionsSchema.launchBrowser.osx.args.description": "Os argumentos a serem passados ao comando para abrir o navegador. Use ${auto-detect-url} para usar automaticamente o endereço que o servidor está ouvindo.",
  "generateOptionsSchema.launchBrowser.osx.command.description": "O executável que iniciará o navegador da web.",
  "generateOptionsSchema.launchBrowser.osx.description": "Opções de configuração de inicialização da Web específicas do OSX. Por padrão, isso iniciará o navegador usando `open`.",
  "generateOptionsSchema.launchBrowser.windows.args.description": "Os argumentos a serem passados ao comando para abrir o navegador. Use ${auto-detect-url} para usar automaticamente o endereço que o servidor está ouvindo.",
  "generateOptionsSchema.launchBrowser.windows.command.description": "O executável que iniciará o navegador da web.",
  "generateOptionsSchema.launchBrowser.windows.description": "Opções de configuração de inicialização da Web específicas do Windows. Por padrão, isso iniciará o navegador usando `cmd /c start`.",
  "generateOptionsSchema.launchSettingsFilePath.markdownDescription": "O caminho para um arquivo launchSettings.json. Se isso não for definido, o depurador irá procurar em `{cwd}/Properties/launchSettings.json`.",
  "generateOptionsSchema.launchSettingsProfile.description": "Se especificado, indica o nome do perfil em launchSettings.json a ser usado. Isso será ignorado se launchSettings.json não for encontrado. launchSettings.json será lido a partir do caminho especificado deve ser a propriedade 'launchSettingsFilePath' ou {cwd}/Properties/launchSettings.json se isso não estiver definido. Se for definido como null ou uma cadeia de caracteres vazia, launchSettings.json será ignorado. Se este valor não for especificado, o primeiro perfil 'Projeto' será usado.",
  "generateOptionsSchema.logging.browserStdOut.markdownDescription": "Sinalize para determinar se o texto stdout da inicialização do navegador da Web deve ser registrado na janela de saída. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.consoleUsageMessage.description": "Controla se uma mensagem é registrada quando o processo de destino chama uma API “Console.Read*” e stdin é redirecionado para o console.",
  "generateOptionsSchema.logging.description": "Sinalizadores para determinar quais tipos de mensagens devem ser registrados na janela de saída.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.all.enumDescription": "Imprima todas as chamadas à API do depurador. Isso é muito detalhado.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.error.enumDescription": "Falhas de impressão de chamadas à API do depurador.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.markdownDescription": "Controla se as chamadas de API para Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h devem ser impressas na janela de saída. Essa opção tem como padrão `none`.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.none.enumDescription": "Desabilitar chamadas de API de rastreamento",
  "generateOptionsSchema.logging.diagnosticsLog.debugRuntimeEventTracing.markdownDescription": "Sinalizador para determinar se o rastreamento detalhado para eventos gerados pelo tempo de execução subjacente deve ser habilitado. Essa opção tem como padrão `false`.",
  "generateOptionsSchema.logging.diagnosticsLog.description": "Configurações para controlar quais mensagens são impressas na janela de saída do log de diagnóstico do depurador. Esse log destina-se a ajudar a solucionar problemas com o depurador.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.error.enumDescription": "Imprima mensagens de diagnóstico em nível de erro.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.important.enumDescription": "Imprima mensagens de diagnóstico importantes.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.markdownDescription": "Controla quais mensagens são impressas na janela de saída do despachante do depurador. Se não for especificado, o padrão será `none`, a menos que uma das configurações de log detalhado esteja habilitada (`debugEngineAPITracing`, `debugRuntimeEventTracing`, `expressionEvaluationTracing` ou `startDebuggingTracing`), caso em que o padrão muda para `normal`.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.none.enumDescription": "Não imprima mensagens de diagnóstico adicionais.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.normal.enumDescription": "Imprima todas as mensagens de diagnóstico não detalhadas.",
  "generateOptionsSchema.logging.diagnosticsLog.expressionEvaluationTracing.markdownDescription": "Sinalizador para determinar se o rastreamento detalhado para avaliação de expressão deve ser habilitado. Essa opção tem como padrão `false`.",
  "generateOptionsSchema.logging.diagnosticsLog.protocolMessages.markdownDescription": "Sinalizador para determinar se as mensagens do protocolo DAP trocadas entre o depurador C# e a interface do usuário devem ser registradas na janela de saída. Essa opção tem como padrão `false`.",
  "generateOptionsSchema.logging.diagnosticsLog.startDebuggingTracing.markdownDescription": "Sinalizador para determinar se o rastreamento detalhado para iniciar a depuração deve ser habilitado. Essa opção tem como padrão `false`.",
  "generateOptionsSchema.logging.elapsedTiming.markdownDescription": "Se for verdade, o log de mensagens de protocolo incluirá as propriedades `adapterElapsedTime` e `engineElapsedTime` para indicar a quantidade de tempo, em microssegundos, que uma solicitação levou. Essa opção tem como padrão `false`.",
  "generateOptionsSchema.logging.engineLogging.deprecationMessage": "A configuração 'logging.engineLogging' foi descontinuada em favor de 'logging.diagnosticsLog.protocolMessages'.",
  "generateOptionsSchema.logging.exceptions.markdownDescription": "Sinalize para determinar se as mensagens de exceção devem ser registradas na janela de saída. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.moduleLoad.markdownDescription": "Sinalizador para determinar se os eventos de carregamento do módulo devem ser registrados na janela de saída. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.processExit.markdownDescription": "Controla se uma mensagem é registrada quando o processo de destino sai ou a depuração é interrompida. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.programOutput.markdownDescription": "Sinalizador para determinar se a saída do programa deve ser registrada na janela de saída quando não estiver usando um console externo. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.threadExit.markdownDescription": "Controla se uma mensagem é registrada quando um thread no processo de destino sai. Esta opção padrão é `false`.",
  "generateOptionsSchema.pipeTransport.debuggerPath.description": "O caminho completo para o depurador na máquina de destino.",
  "generateOptionsSchema.pipeTransport.description": "Quando presente, informa ao depurador para se conectar a um computador remoto usando outro executável como um pipe que retransmitirá a entrada/saída padrão entre o VS Code e o executável de back-end do depurador .NET Core (vsdbg).",
  "generateOptionsSchema.pipeTransport.linux.description": "Opções de configuração de inicialização de pipe específicas do Linux",
  "generateOptionsSchema.pipeTransport.linux.pipeArgs.0.description": "Argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.linux.pipeArgs.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.linux.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.linux.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.linux.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
  "generateOptionsSchema.pipeTransport.linux.quoteArgs.description": "Os argumentos que contêm caracteres que precisam ser citados (exemplo: espaços) devem ser citados? O padrão é 'verdadeiro'. Se definido como falso, o comando do depurador não será mais citado automaticamente.",
  "generateOptionsSchema.pipeTransport.osx.description": "Opções de configuração de inicialização de pipe específicas do OSX",
  "generateOptionsSchema.pipeTransport.osx.pipeArgs.0.description": "Argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.osx.pipeArgs.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.osx.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.osx.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.osx.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
  "generateOptionsSchema.pipeTransport.osx.quoteArgs.description": "Os argumentos que contêm caracteres que precisam ser citados (exemplo: espaços) devem ser citados? O padrão é 'verdadeiro'. Se definido como falso, o comando do depurador não será mais citado automaticamente.",
  "generateOptionsSchema.pipeTransport.pipeArgs.0.description": "Argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.pipeArgs.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
  "generateOptionsSchema.pipeTransport.quoteArgs.description": "Os argumentos que contêm caracteres que precisam ser citados (exemplo: espaços) devem ser citados? O padrão é 'verdadeiro'. Se definido como falso, o comando do depurador não será mais citado automaticamente.",
  "generateOptionsSchema.pipeTransport.windows.description": "Opções de configuração de inicialização de pipe específicas do Windows",
  "generateOptionsSchema.pipeTransport.windows.pipeArgs.0.description": "Argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.windows.pipeArgs.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.windows.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.windows.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.windows.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
  "generateOptionsSchema.pipeTransport.windows.quoteArgs.description": "Os argumentos que contêm caracteres que precisam ser citados (exemplo: espaços) devem ser citados? O padrão é 'verdadeiro'. Se definido como falso, o comando do depurador não será mais citado automaticamente.",
  "generateOptionsSchema.processId.0.markdownDescription": "O ID do processo ao qual anexar. Use \"\" para obter uma lista de processos em execução aos quais anexar. Se `processId` for usado, `processName` não deve ser usado.",
  "generateOptionsSchema.processId.1.markdownDescription": "O ID do processo ao qual anexar. Use \"\" para obter uma lista de processos em execução aos quais anexar. Se `processId` for usado, `processName` não deve ser usado.",
  "generateOptionsSchema.processName.markdownDescription": "O nome do processo ao qual anexar. Se for usado, `processId` não deve ser usado.",
  "generateOptionsSchema.program.markdownDescription": "Caminho para a dll do aplicativo ou o executável do host do .NET Core a ser iniciado.\r\nEsta propriedade normalmente assume o formato: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\r\n\r\nExemplo: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\r\n\r\nOnde:\r\n'(target-framework)' é a estrutura para a qual o projeto depurado está sendo compilado. Normalmente, isso é encontrado no arquivo de projeto como a propriedade 'TargetFramework'.\r\n\r\n'(project-name.dll)' é o nome da dll de saída de build do projeto depurado. Normalmente, é o mesmo que o nome do arquivo de projeto, mas com uma '.dll' extensão.",
  "generateOptionsSchema.requireExactSource.markdownDescription": "Sinalize para exigir que o código-fonte atual corresponda ao pdb. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.sourceFileMap.markdownDescription": "Mapeia caminhos de tempo de construção para locais de origem local. Todas as instâncias do caminho de tempo de compilação serão substituídas pelo caminho de origem local.\r\n\r\nExemplo:\r\n\r\n`{\"<build-path>\":\"<local-source-path>\"}`",
  "generateOptionsSchema.sourceLinkOptions.additionalItems.enabled.markdownDescription": "O Source Link está habilitado para este URL? Se não for especificado, esta opção assume como padrão `true`.",
  "generateOptionsSchema.sourceLinkOptions.markdownDescription": "Opções para controlar como o Source Link se conecta aos servidores web. [Mais informações](https://aka.ms/VSCode-DotNet-SourceLink)",
  "generateOptionsSchema.stopAtEntry.markdownDescription": "Se verdadeiro, o depurador deve parar no ponto de entrada do destino. Esta opção padrão é `false`.",
  "generateOptionsSchema.suppressJITOptimizations.markdownDescription": "Se for verdade, quando um módulo otimizado (.dll compilado na configuração Release) for carregado no processo de destino, o depurador solicitará ao compilador Just-In-Time para gerar código com otimizações desabilitadas. [Mais informações](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)",
  "generateOptionsSchema.symbolOptions.cachePath.description": "Diretório onde os símbolos baixados dos servidores de símbolos devem ser armazenados em cache. Se não for especificado, no Windows, o depurador será padronizado como %TEMP%\\SymbolCache, e no Linux e macOS, o depurador será padronizado como ~/.dotnet/symbolcache.",
  "generateOptionsSchema.symbolOptions.description": "Opções para controlar como os símbolos (arquivos .pdb) são encontrados e carregados.",
  "generateOptionsSchema.symbolOptions.moduleFilter.description": "Fornece opções para controlar para quais módulos (arquivos .dll) o depurador tentará carregar símbolos (arquivos .pdb).",
  "generateOptionsSchema.symbolOptions.moduleFilter.excludedModules.description": "Matriz de módulos para a qual o depurador NÃO deve carregar símbolos. Há suporte para curingas (exemplo: MyCompany.*.dll).\r\n\r\nEssa propriedade será ignorada, a menos que 'mode' esteja definido como 'loadAllButExcluded'.",
  "generateOptionsSchema.symbolOptions.moduleFilter.includeSymbolsNextToModules.description": "Se for verdadeira, para qualquer módulo NOT na matriz 'includedModules', o depurador ainda verificará ao lado do próprio módulo e do executável de inicialização, mas não verificará os caminhos na lista de pesquisa de símbolo. Esta opção é padronizada como 'true'.\r\n\r\nessa propriedade será ignorada, a menos que 'mode' esteja definido como 'loadOnlyIncluded'.",
  "generateOptionsSchema.symbolOptions.moduleFilter.includeSymbolsOnDemand.description": "Se for true, para qualquer módulo NOT na matriz \"includedModules\", o depurador tentará baixar símbolos quando detectar que símbolos são necessários, como ao tentar entrar no módulo. Esta opção usa como padrão \"true\".\r\n\r\nEsta propriedade é ignorada, a menos que \"mode\" esteja definido como \"loadOnlyIncluded\".",
  "generateOptionsSchema.symbolOptions.moduleFilter.includedModules.description": "Matriz de módulos para a qual o depurador deve carregar símbolos. Há suporte para curingas (exemplo: MyCompany.*.dll).\r\n\r\nessa propriedade será ignorada, a menos que 'mode' esteja definido como 'loadOnlyIncluded'.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.description": "Controla em quais dos dois modos operacionais básicos o filtro de módulo opera.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.loadAllButExcluded.enumDescription": "Carregue símbolos para todos os módulos, a menos que o módulo esteja na matriz 'excludedModules'.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.loadOnlyIncluded.enumDescription": "Não tente carregar símbolos para o módulo ANY, a menos que ele esteja na matriz 'includedModules' ou seja incluído por meio da configuração 'includeSymbolsNextToModules'.",
  "generateOptionsSchema.symbolOptions.searchMicrosoftSymbolServer.description": "Se for 'true', o servidor de Símbolos da Microsoft (https​://msdl.microsoft.com​/download/symbols) será adicionado ao caminho de pesquisa de símbolos. Se não for especificado, essa opção usará como padrão 'false'.",
  "generateOptionsSchema.symbolOptions.searchNuGetOrgSymbolServer.description": "Se 'true', o servidor de símbolos NuGet.org (https​://symbols.nuget.org​/download/symbols) é adicionado ao caminho de pesquisa de símbolos. Se não for especificado, esta opção assume como padrão 'false'.",
  "generateOptionsSchema.symbolOptions.searchPaths.description": "Matriz de URLs de servidores de símbolos (exemplo: http​://MyExampleSymbolServer) ou diretórios (exemplo: /build/symbols) para procurar arquivos .pdb. Esses diretórios serão pesquisados além dos locais padrão -- próximos ao módulo e ao caminho onde o pdb foi originalmente descartado.",
  "generateOptionsSchema.targetArchitecture.markdownDescription": "[Com suporte apenas na depuração local do macOS]\r\n\r\nA arquitetura do depurado. Isso será detectado automaticamente, a menos que esse parâmetro seja definido. Os valores permitidos são `x86_64` ou `arm64`.",
  "generateOptionsSchema.targetOutputLogPath.description": "Quando definido, o texto que o aplicativo de destino grava em stdout e stderr (ex: Console.WriteLine) será salvo no arquivo especificado. Essa opção será ignorada se o console for definido como algo diferente de internalConsole. Por exemplo. '${workspaceFolder}/out.txt'",
  "generateOptionsSchema.type.markdownDescription": "Tipo de código a ser depurado. Pode ser \"coreclr\" para a depuração do .NET Core ou \"clr\" para o .NET Framework para desktop. O \"clr\" só funciona no Windows, pois o Desktop Framework é exclusivo do Windows.",
  "viewsWelcome.debug.contents": "[Gerar ativos C# para Build e Depuração](command:dotnet.generateAssets)\r\n\r\nPara saber mais sobre launch.json, consulte [Como configurar launch.json para depuração C#](https://aka.ms/VSCode-CS-LaunchJson)."
}